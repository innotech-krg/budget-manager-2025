version: '3.8'

services:
  # =================================
  # FRONTEND - React + Vite
  # =================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: budget-manager-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://backend:3001/api
      - VITE_WS_URL=ws://backend:3001
      - VITE_APP_ENVIRONMENT=production
    depends_on:
      - backend
    networks:
      - budget-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =================================
  # BACKEND - Node.js + Express
  # =================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: budget-manager-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=http://frontend:3000
    volumes:
      - backend-uploads:/app/uploads
      - backend-temp:/app/temp
      - backend-logs:/app/logs
    networks:
      - budget-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =================================
  # NGINX - Reverse Proxy & Load Balancer
  # =================================
  nginx:
    image: nginx:alpine
    container_name: budget-manager-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - budget-network
    restart: unless-stopped

  # =================================
  # REDIS - Caching & Session Store
  # =================================
  redis:
    image: redis:7-alpine
    container_name: budget-manager-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - budget-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

# =================================
# DEVELOPMENT OVERRIDE
# =================================
  # Development services (nur bei docker-compose.dev.yml)
  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: budget-manager-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:3001/api
      - VITE_WS_URL=ws://localhost:3001
      - VITE_APP_ENVIRONMENT=development
    networks:
      - budget-network

  backend-dev:
    profiles: ["dev"]
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: budget-manager-backend-dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend-uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - DEBUG=budget-manager:*
    networks:
      - budget-network

# =================================
# NETWORKS
# =================================
networks:
  budget-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =================================
# VOLUMES
# =================================
volumes:
  backend-uploads:
    driver: local
  backend-temp:
    driver: local
  backend-logs:
    driver: local
  redis-data:
    driver: local
